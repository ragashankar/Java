All of the arithmetic operators may be applied to any Java primitives, except boolean
and String. Furthermore, only the addition operators + and += may be applied to String
values, which results in String concatenation.

The modulus, or remainder operator, is simply the
remainder when two numbers are divided. For example, 9 divided by 3 divides evenly and
has no remainder; therefore, the remainder, or 9 % 3, is 0. On the other hand, 11 divided
by 3 does not divide evenly; therefore, the remainder, or 11 % 3, is 2.

Numeric Promotion Rules
1. If two values have different data types, Java will automatically promote one of the values
to the larger of the two data types.
2. If one of the values is integral and the other is floating-point, Java will automatically
promote the integral value to the floating-point value’s data type.

3. Smaller data types, namely byte, short, and char, are first promoted to int any time
they’re used with a Java binary arithmetic operator, even if neither of the operands is
int.
4. After all promotion has occurred and the operands have the same data type, the resulting
value will have the same data type as its promoted operands.

The last two rules are the ones most people have trouble with, and the ones likely to trip
you up on the exam. For the third rule, note that unary operators are excluded from this
rule. For example, applying ++ to a short value results in a short value.

What is the data type of x * y?
int x = 1;
long y = 33;
If we follow the fi rst rule, since one of the values is long and the other is int, and long
is larger than int, then the int value is promoted to a long, and the resulting value is
long.

What is the data type of x + y?
double x = 39.21;
float y = 2.1;
This is actually a trick question, as this code will not compile! As you may remember
from Chapter 1, fl oating-point literals are assumed to be double, unless postfi xed with
an f, as in 2.1f. If the value was set properly to 2.1f, then the promotion would be
similar to the last example, with both operands being promoted to a double, and the
result would be a double value.

What is the data type of x * y / z?
short x = 14;
float y = 13;
double z = 30;
In this case, we must apply all of the rules. First, x will automatically be promoted to
int solely because it is a short and it is being used in an arithmetic binary operation.
The promoted x value will then be automatically promoted to a float so that it can be
multiplied with y. The result of x * y will then be automatically promoted to a double,
so that it can be multiplied with z, resulting in a double value.

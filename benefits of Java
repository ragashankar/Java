Object Oriented Java is an object-oriented language, which means all code is defi ned in
classes and most of those classes can be instantiated into objects. We’ll discuss this more
throughout the book. Many languages before Java were procedural, which meant there were
routines or methods but no classes. Another common approach is functional programming.
Java allows for functional programming within a class, but object oriented is still the main
organization of code.

Encapsulation Java supports access modifi ers to protect data from unintended access
and modifi cation. Most people consider encapsulation to be an aspect of object-oriented
languages. Since the exam objectives call attention to it specifi cally, so do we.

Platform Independent Java is an interpreted language because it gets compiled to
bytecode. A key benefi t is that Java code gets compiled once rather than needing to be
recompiled for different operating systems. This is known as “write once, run everywhere.”
On the OCP exam, you’ll learn that it is possible to write code that does not run everywhere.
For example, you might refer to a fi le in a specifi c directory. If you get asked on the
OCA exam, the answer is that the same class fi les run everywhere.


Robust One of the major advantages of Java over C++ is that it prevents memory leaks.
Java manages memory on its own and does garbage collection automatically. Bad memory
management in C++ is a big source of errors in programs.
